#
# ------------------------------------------------------------------------------
#
# ------------------------------------------------------------------------------
# 
# The inner distributor produces output in this format:
#
# {
#   "head": {
#     "vars": [ "label" ]
#   } ,
#   "results": {
#     "bindings": [
#       {
#         "label": { "type": "literal" , "value": "A Microfluidic Biomaterial" }
#       } ,
#
#       ... more publications ...
#
#     ]
#   }
# }
# 

@prefix : <http://vitro.mannlib.cornell.edu/ns/vitro/ApplicationSetup#> .

:lpub_distributor
    a   <java:edu.cornell.library.scholars.webapp.controller.api.distribute.DataDistributor> ,
        <java:edu.cornell.library.scholars.webapp.controller.api.distribute.decorator.JavaScriptTransformDistributor> ;
    :actionName "listPublications-construct" ;
    :contentType "application/json" ;
    :child :lpub_inner ;
    :supportingScript "/js/scholars-vis/rdflib.js";
    :script """
        function transform(rawOutput) {
            var RDF = $rdf.Namespace("http://www.w3.org/1999/02/22-rdf-syntax-ns#");
            	var RDFS = $rdf.Namespace("http://www.w3.org/2000/01/rdf-schema#");
            var BIBO = $rdf.Namespace("http://purl.org/ontology/bibo/");
            var VIVO = $rdf.Namespace("http://vivoweb.org/ontology/core#");
        
            var graph = $rdf.graph();
            $rdf.parse(rawOutput, graph, "http://graph.name", "text/turtle");
            
            	var pubStmts = graph.statementsMatching(undefined, RDF('type'), BIBO('Document'));
            	return JSON.stringify(pubStmts.map(processPublication), null, 2);
            	
            	function processPublication(stmt) {
            		var pubNode = stmt.subject;
            	    return {
            	        uri: pubNode.uri,
            	        label: graph.any(pubNode, RDFS('label')).value,
            	        authors: findAuthors()
            	    }
            	    
            	    function findAuthors() {
            	        var authorStructs = graph.each(pubNode, VIVO('relatedBy')).map(findAuthorInfo);
            	        return authorStructs.sort(rankSorter).map(getLabel);
            	        
            	        function findAuthorInfo(authorshipNode) {
            	            var rank = parseInt(graph.any(authorshipNode, VIVO('rank')).value);
            	            var authorNode = graph.any(authorshipNode, VIVO('relates'));
            	            var label = graph.any(authorNode, RDFS('label')).value;
            	            return {
            	                label: label,
            	                rank: rank
            	            };
            	        }
            	        
            	        function rankSorter(a, b) {
            	            return a.rank - b.rank;
            	        }
            	        
            	        function getLabel(a) {
            	            return a.label;
            	        }
            	    }
            	}
        }
    """ .

:lpub_inner
    a   <java:edu.cornell.library.scholars.webapp.controller.api.distribute.DataDistributor> ,
        <java:edu.cornell.library.scholars.webapp.controller.api.distribute.rdf.RdfGraphDistributor> ;
    :actionName "_none_" ;
    :graphBuilder :lpub_gb .
    
:lpub_gb
    a   <java:edu.cornell.library.scholars.webapp.controller.api.distribute.rdf.graphbuilder.GraphBuilder> ,
        <java:edu.cornell.library.scholars.webapp.controller.api.distribute.rdf.graphbuilder.ConstructQueryGraphBuilder> ;
    :uriBinding "person" ;
    :constructQuery """
        PREFIX rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        PREFIX rdfs:     <http://www.w3.org/2000/01/rdf-schema#>
        PREFIX bibo:     <http://purl.org/ontology/bibo/>
        PREFIX foaf:     <http://xmlns.com/foaf/0.1/>
        PREFIX vivo:     <http://vivoweb.org/ontology/core#>
        CONSTRUCT {
          ?pub a bibo:Document .
          ?pub rdfs:label ?pubLabel .

          ?pub vivo:relatedBy ?auth2 .
          ?auth2 vivo:rank ?rank .
          ?auth2 vivo:relates ?author .
          ?author rdfs:label ?authorName .

          ?pub vivo:dateTimeValue ?timeStamp .
          ?timeStamp vivo:dateTime ?dateTime .

          ?pub vivo:hasPublicationVenue ?journal .
          ?journal rdfs:label ?journalName .

          ?pub bibo:doi ?doi .
        }
        WHERE
        {
          ?person vivo:relatedBy ?auth .
          ?auth a vivo:Authorship .
          ?auth vivo:relates ?pub .
          ?pub a bibo:Document .
          
          ?pub rdfs:label ?pubLabel .

          ?pub vivo:relatedBy ?auth2 .
          ?auth2 a vivo:Authorship .
          ?auth2 vivo:rank ?rank .
          ?auth2 vivo:relates ?author .
          ?author a foaf:Person .
          ?author rdfs:label ?authorName .

          OPTIONAL {
              ?pub vivo:dateTimeValue ?timeStamp .
              ?timeStamp vivo:dateTime ?dateTime .
          }
          OPTIONAL {
              ?pub vivo:hasPublicationVenue ?journal .
              ?journal rdfs:label ?journalName .
          }
          OPTIONAL {
              ?pub bibo:doi ?doi .
          }
        }
    """ .
