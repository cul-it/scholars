# $This file is distributed under the terms of the license in /doc/license.txt$ 

#
# Short View configuration
#
# This file allows a Vitro administrator to configure short view templates and data getters
# for individuals of particular classes in particular contexts. This is a transitional
# implementation, and should be replaced when the work on the Application and Display
# Ontology is complete.
#
# Find out how to use this file at 
# https://sourceforge.net/apps/mediawiki/vivo/index.php?title=Using_Short_Views_in_Release_1.5
#
@prefix vivo: <http://vivoweb.org/ontology/core#> .
@prefix display: <http://vitro.mannlib.cornell.edu/ontologies/display/1.1#> .
@prefix datagetters: <java:edu.cornell.mannlib.vitro.webapp.utils.dataGetter.> .
@prefix mydomain: <http://localhost:8080/individual/> .

vivo:FacultyMember
        display:hasCustomView mydomain:peopleSearchView ;
        display:hasCustomView mydomain:peopleIndexView ;
        display:hasCustomView mydomain:peopleBrowseView ;
        display:hasCustomView mydomain:peopleExpertsView .

vivo:Librarian
        display:hasCustomView mydomain:peopleSearchView ;
        display:hasCustomView mydomain:peopleIndexView ;
        display:hasCustomView mydomain:peopleBrowseView ;
        display:hasCustomView mydomain:peopleExpertsView .

vivo:NonFacultyAcademic
        display:hasCustomView mydomain:peopleSearchView ;
        display:hasCustomView mydomain:peopleIndexView ;
        display:hasCustomView mydomain:peopleBrowseView ;
        display:hasCustomView mydomain:peopleExpertsView .

vivo:NonAcademic
        display:hasCustomView mydomain:peopleSearchView ;
        display:hasCustomView mydomain:peopleIndexView ;
        display:hasCustomView mydomain:peopleBrowseView ;
        display:hasCustomView mydomain:peopleExpertsView .

vivo:EmeritusFaculty
        display:hasCustomView mydomain:peopleSearchView ;
        display:hasCustomView mydomain:peopleIndexView ;
        display:hasCustomView mydomain:peopleBrowseView ;
        display:hasCustomView mydomain:peopleExpertsView .

mydomain:peopleSearchView
	a display:customViewForIndividual ;
	display:appliesToContext "SEARCH" ;
	display:hasTemplate "view-search-custom.ftl" ;
	display:hasDataGetter mydomain:personInPositionDG .

mydomain:peopleIndexView
	a display:customViewForIndividual ;
	display:appliesToContext "INDEX" ;
	display:hasTemplate "view-index-custom.ftl" ;
	display:hasDataGetter mydomain:personInPositionDG .

mydomain:peopleBrowseView
	a display:customViewForIndividual ;
	display:appliesToContext "BROWSE" ;
	display:hasTemplate "view-browse-people-custom.ftl" ;
	display:hasDataGetter mydomain:personInPositionPlusTitleDG .

mydomain:peopleExpertsView
	a display:customViewForIndividual ;
	display:appliesToContext "EXPERTS" ;
	display:hasTemplate "view-experts-default.ftl" ;
	display:hasDataGetter mydomain:expertsInPositionDG ;
	display:hasDataGetter mydomain:expertsPubCountDG .

mydomain:personInPositionDG
	a datagetters:SparqlQueryDataGetter ;
	display:saveToVar "position" ;
	display:query """
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
PREFIX vivo: <http://vivoweb.org/ontology/core#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX hr: <http://scholars.cornell.edu/ontology/hr.owl#>
SELECT DISTINCT ?posLabel (str(?oLabel) AS ?orgLabel)
WHERE {    
?individualUri vivo:relatedBy ?position .
?position a vivo:Position .
?position rdf:type vivo:PrimaryPosition .
?position rdfs:label ?posLabel .
?position hr:positionIn ?org .
?org rdfs:label ?oLabel
}
	""" .

mydomain:personInPositionPlusTitleDG
	a datagetters:SparqlQueryDataGetter ;
	display:saveToVar "position" ;
	display:query """
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
PREFIX vivo: <http://vivoweb.org/ontology/core#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX hr: <http://scholars.cornell.edu/ontology/hr.owl#>
SELECT DISTINCT ?posn (str(?oLabel) as ?orgLabel) ?title
WHERE {    
?individualUri vivo:relatedBy ?position .
?position a vivo:Position .
OPTIONAL { ?individualUri vivo:preferredTitle ?title . }
?position rdf:type vivo:PrimaryPosition .
?position rdfs:label ?posn .
?position hr:positionIn ?org .
?org rdfs:label ?oLabel
}
	""" .

mydomain:expertsInPositionDG
	a datagetters:SparqlQueryDataGetter ;
	display:saveToVar "position" ;
	display:query """
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
PREFIX vivo: <http://vivoweb.org/ontology/core#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX hr: <http://scholars.cornell.edu/ontology/hr.owl#>
SELECT DISTINCT ?expPosn (str(?oLabel) as ?orgLabel)
WHERE {    
?individualUri vivo:relatedBy ?position .
?position a vivo:Position .
?position rdf:type vivo:PrimaryPosition .
?position rdfs:label ?expPosn .
?position hr:positionIn ?org .
?org rdfs:label ?oLabel
}
	""" .

mydomain:expertsPubCountDG
	a datagetters:SparqlQueryDataGetter ;
	display:saveToVar "pubCount" ;
	display:query """
	PREFIX rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	PREFIX rdfs:     <http://www.w3.org/2000/01/rdf-schema#>
	PREFIX bibo:     <http://purl.org/ontology/bibo/>
	PREFIX vivo:     <http://vivoweb.org/ontology/core#>
	PREFIX vivoc:    <http://scholars.cornell.edu/ontology/vivoc.owl#>
	select 
	  (count(DISTINCT ?label) as ?lcount)  (count(DISTINCT ?journal) as ?jcount) 

	WHERE
	{
	  {
	    ?individualUri vivo:relatedBy ?auth .
	    ?auth a vivo:Authorship .
	    ?auth vivo:relates ?pub .
	    ?pub a bibo:Document .
	    ?pub rdfs:label ?label .
	    ?pub vivo:freetextKeyword ?keyword . 
	    ?pub vivo:hasPublicationVenue ?journal . 
		BIND (str('?querytext') AS ?text)
		BIND (REPLACE(?text, "<", "", "i") AS ?textTwo)
		BIND (REPLACE(?textTwo, ">", "", "i") AS ?textThree)
	    FILTER regex(?keyword,?textThree,'i')
	  } UNION {
	    ?individualUri vivo:relatedBy ?auth .
	    ?auth a vivo:Authorship .
	    ?auth vivo:relates ?pub .
	    ?pub a bibo:Document .
	    ?pub rdfs:label ?label .
	    ?pub vivo:hasSubjectArea ?mesh .
	    ?mesh a vivoc:MeshTerm .
	    ?mesh rdfs:label ?keyword .
	    ?pub vivo:hasPublicationVenue ?journal . 
		BIND (str('?querytext') AS ?text)
		BIND (REPLACE(?text, "<", "", "i") AS ?textTwo)
		BIND (REPLACE(?textTwo, ">", "", "i") AS ?textThree)
	    FILTER regex(?keyword,?textThree,'i')
	 } UNION {
	    ?individualUri vivo:relatedBy ?auth .
	    ?auth a vivo:Authorship .
	    ?auth vivo:relates ?pub .
	    ?pub a bibo:Document .
	    ?pub rdfs:label ?label .
	    ?pub vivoc:inferredKeyword ?keyword . 
	    ?pub vivo:hasPublicationVenue ?journal . 
		BIND (str('?querytext') AS ?text)
		BIND (REPLACE(?text, "<", "", "i") AS ?textTwo)
		BIND (REPLACE(?textTwo, ">", "", "i") AS ?textThree)
	    FILTER regex(?keyword,?textThree,'i')
	  } UNION {
	    ?individualUri vivo:relatedBy ?auth .
	    ?auth a vivo:Authorship .
	    ?auth vivo:relates ?pub .
	    ?pub a bibo:Document .
	    ?pub rdfs:label ?label .
	    ?pub vivo:freetextKeyword ?keyword . 
	    ?pub vivoc:freetextJournalTitle ?journal . 
		BIND (str('?querytext') AS ?text)
		BIND (REPLACE(?text, "<", "", "i") AS ?textTwo)
		BIND (REPLACE(?textTwo, ">", "", "i") AS ?textThree)
	    FILTER regex(?keyword,?textThree,'i')
	  } UNION {
	    ?individualUri vivo:relatedBy ?auth .
	    ?auth a vivo:Authorship .
	    ?auth vivo:relates ?pub .
	    ?pub a bibo:Document .
	    ?pub rdfs:label ?label .
	    ?pub vivo:hasSubjectArea ?mesh .
	    ?mesh a vivoc:MeshTerm .
	    ?mesh rdfs:label ?keyword .
	    ?pub vivoc:freetextJournalTitle ?journal . 
		BIND (str('?querytext') AS ?text)
		BIND (REPLACE(?text, "<", "", "i") AS ?textTwo)
		BIND (REPLACE(?textTwo, ">", "", "i") AS ?textThree)
	    FILTER regex(?keyword,?textThree,'i')
	 } UNION {
	    ?individualUri vivo:relatedBy ?auth .
	    ?auth a vivo:Authorship .
	    ?auth vivo:relates ?pub .
	    ?pub a bibo:Document .
	    ?pub rdfs:label ?label .
	    ?pub vivoc:inferredKeyword ?keyword . 
	    ?pub vivoc:freetextJournalTitle ?journal . 
		BIND (str('?querytext') AS ?text)
		BIND (REPLACE(?text, "<", "", "i") AS ?textTwo)
		BIND (REPLACE(?textTwo, ">", "", "i") AS ?textThree)
	    FILTER regex(?keyword,?textThree,'i')
	  }
	  
	}


	""" .
